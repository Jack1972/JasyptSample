<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:context="http://www.springframework.org/schema/context" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">
   <spring:beans>
    
 <!--                                                                      -->
 <!-- Configuration for encryptor, based on environment variables.         -->
 <!--                                                                      -->
 <!-- In this example, the encryption password will be read from an        -->
 <!-- environment variable called "JASYPT_MULE_PASSWORD" which, once       --> 
 <!-- the application has been started, could be safely unset.             -->
 <!--                                                                      -->
 <spring:bean id="environmentVariablesConfiguration"
     class="org.jasypt.encryption.pbe.config.EnvironmentStringPBEConfig">
   <spring:property name="algorithm" value="PBEWithMD5AndDES" />
   <spring:property name="passwordEnvName" value="JASYPT_MULE_PASSWORD" />
 </spring:bean>                                       
  
  
 <!--                                                                      -->
 <!-- This will be the encryptor used for decrypting configuration values. -->
 <!--                                                                      -->
 <spring:bean id="configurationEncryptor"
     class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor">
   <spring:property name="config" ref="environmentVariablesConfiguration" />
 </spring:bean>


 <!--                                                                      -->
 <!-- The EncryptablePropertyPlaceholderConfigurer will read the           -->
 <!-- .properties files and make their values accessible as ${var}.        -->
 <!--                                                                      -->
 <!-- Our "configurationEncryptor" bean (which implements                  --> 
 <!-- org.jasypt.encryption.StringEncryptor) is set as a constructor arg.  -->
 <!--                                                                      -->
 <!--  The property file should be placed in /src/main/resources           -->
 <!--                                                                      -->
 
 <spring:bean id="propertyConfigurer"
     class="org.jasypt.spring31.properties.EncryptablePropertyPlaceholderConfigurer">
   <spring:constructor-arg ref="configurationEncryptor" />
   <spring:property name="locations">
     <spring:list>
       <spring:value>jasyptsample.properties</spring:value>
     </spring:list>
   </spring:property>
   
 </spring:bean>

</spring:beans>
   
    <context:property-placeholder location="jasyptsample.properties"/>     
    <http:listener-config name="HTTP_Listener_Configuration" host="0.0.0.0" port="8081" doc:name="HTTP Listener Configuration"/>
    <flow name="jasyptsampleFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/" doc:name="HTTP"/>
        <!-- write the decryptet password to the console   -->
        <logger message="${jasypttest}" level="INFO" doc:name="Logger"/>
    </flow>  
</mule>
